package ru.job4j.urlshortcut.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;
import ru.job4j.urlshortcut.util.HostName;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;
import java.util.UUID;

/** Model class to transfer and store information about servers. */
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString
@Entity(name = "Server")
@Table(name = "servers")
public class Server {

    /** Unique identification number generated by persistent storage. */
    @EqualsAndHashCode.Include
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "server_uuid", updatable = false)
    private UUID uuid;

    /** Server host (domain) name. */
    @HostName
    @Column(nullable = false, unique = true, updatable = false)
    private String host;

    /** Password to get access rights to server URLs. */
    @JsonIgnore
    @Column(nullable = false)
    private String password;

    /** Date and time when the server was registered. */
    @Column(nullable = false)
    @CreationTimestamp
    private LocalDateTime created;

    /** Date and time when the server was modified last time. */
    @Column(nullable = false)
    @UpdateTimestamp
    private LocalDateTime updated;

    /** Server lifecycle and access status. */
    @Enumerated(EnumType.STRING)
    private Status status = Status.REGISTERED;

    /** Server description. */
    @Size(max = 256, message = "Description maximum length must be 256 symbols")
    private String description;
}
